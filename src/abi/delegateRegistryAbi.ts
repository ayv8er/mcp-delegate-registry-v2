export const delegateRegistryAbi = [
  {
    type: "function",
    name: "checkDelegateForAll",
    inputs: [
      { name: "to", type: "address", internalType: "address" },
      { name: "from", type: "address", internalType: "address" },
      { name: "rights", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkDelegateForContract",
    inputs: [
      { name: "to", type: "address", internalType: "address" },
      { name: "from", type: "address", internalType: "address" },
      { name: "contract_", type: "address", internalType: "address" },
      { name: "rights", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkDelegateForERC721",
    inputs: [
      { name: "to", type: "address", internalType: "address" },
      { name: "from", type: "address", internalType: "address" },
      { name: "contract_", type: "address", internalType: "address" },
      { name: "tokenId", type: "uint256", internalType: "uint256" },
      { name: "rights", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "delegateERC721",
    inputs: [
      { name: "to", type: "address", internalType: "address" },
      { name: "contract_", type: "address", internalType: "address" },
      { name: "tokenId", type: "uint256", internalType: "uint256" },
      { name: "rights", type: "bytes32", internalType: "bytes32" },
      { name: "enable", type: "bool", internalType: "bool" },
    ],
    outputs: [{ name: "delegationHash", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getIncomingDelegations",
    inputs: [{ name: "to", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "delegations",
        type: "tuple[]",
        internalType: "struct IDelegateRegistry.Delegation[]",
        components: [
          { name: "type_", type: "uint8", internalType: "enum IDelegateRegistry.DelegationType" },
          { name: "to", type: "address", internalType: "address" },
          { name: "from", type: "address", internalType: "address" },
          { name: "rights", type: "bytes32", internalType: "bytes32" },
          { name: "contract_", type: "address", internalType: "address" },
          { name: "tokenId", type: "uint256", internalType: "uint256" },
          { name: "amount", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOutgoingDelegations",
    inputs: [{ name: "from", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "delegations",
        type: "tuple[]",
        internalType: "struct IDelegateRegistry.Delegation[]",
        components: [
          { name: "type_", type: "uint8", internalType: "enum IDelegateRegistry.DelegationType" },
          { name: "to", type: "address", internalType: "address" },
          { name: "from", type: "address", internalType: "address" },
          { name: "rights", type: "bytes32", internalType: "bytes32" },
          { name: "contract_", type: "address", internalType: "address" },
          { name: "tokenId", type: "uint256", internalType: "uint256" },
          { name: "amount", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [{ name: "data", type: "bytes[]", internalType: "bytes[]" }],
    outputs: [{ name: "results", type: "bytes[]", internalType: "bytes[]" }],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "readSlot",
    inputs: [{ name: "location", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "readSlots",
    inputs: [{ name: "locations", type: "bytes32[]", internalType: "bytes32[]" }],
    outputs: [{ name: "", type: "bytes32[]", internalType: "bytes32[]" }],
    stateMutability: "view",
  },
];